to determine-closeness-to-exit ;for all patches with pcolor = red and pcolor one-of neighbours8 = orange
  ask patches with [pcolor != red and pcolor != orange]
  [set closeness-to-exit 600]
  ask patches with [pcolor = red and any? neighbors with [pcolor = orange]]
  [
    set closeness-to-exit 0
    ask neighbors with [pcolor = orange]
    [set closeness-to-exit 1
      set pcolor 23
    ]
  ]
  
  let counter 1
  while [counter < 180] 
  [
    ask patches with [closeness-to-exit = counter]
    [ask neighbors with [pcolor = orange ] 
      [
      if counter + 1 > closeness-to-exit 
        [
        set closeness-to-exit counter + 1
        set pcolor 23
      ]]]
   set counter counter + 1 
  ] 
end

to determine-closeness-to-main-exit
  ask patches with [pcolor != red and pcolor != 23]
  [set closeness-to-main-exit 600]
  ask patches with [(pxcor = 115  and pycor = 150) or (pxcor = 125  and pycor = 146)]
  [
    set closeness-to-main-exit 0
    ask neighbors with [pcolor = 23]
    [set closeness-to-main-exit 1
    set pcolor orange] 
  ]
  
  let counter 1
  while [counter < 250] 
  [
    ask patches with [closeness-to-main-exit = counter]
    [ask neighbors with [pcolor = 23 ] 
      [
      if counter + 1 > closeness-to-main-exit 
        [
        set closeness-to-main-exit counter + 1
        set pcolor orange
      ]]]
   set counter counter + 1 
  ] 
end


to evacuate
  ifelse any? patches in-radius 5 with [evac-path? = true]
  [ 
    face min-one-of patches in-radius 5 [closeness-to-exit]
    fd walking-speed
  ]
  [
    ifelse any? patches in-radius 20 with [evac-path? = true]
    [ 
      face min-one-of patches in-radius 20 with [evac-path? = true] [distance myself]
      fd walking-speed
    ]
    [
      face min-one-of patches with [evac-path? = true] [distance myself]
      fd walking-speed
    ]   
  ]
  if [pcolor] of patch-here = red
  [die]
  
end



